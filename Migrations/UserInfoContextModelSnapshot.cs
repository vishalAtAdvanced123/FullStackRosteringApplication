// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RosteringPractice.DbContexts;

#nullable disable

namespace RosteringPractice.Migrations
{
    [DbContext(typeof(UserInfoContext))]
    partial class UserInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RosteringPractice.Entity.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C#",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Angular",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Web API",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Python",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Java",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Machine Learning",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("RosteringPractice.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Vishalanilrathod@gmail.com",
                            Gender = "Male",
                            Location = "Vadodara",
                            Name = "Vishal Rathod",
                            Password = "Vishal@123",
                            Position = "Developer Trainee"
                        },
                        new
                        {
                            Id = 2,
                            Email = "rahulparik12@gmail.com",
                            Gender = "Male",
                            Location = "Vadodara",
                            Name = "Rahul Parik",
                            Password = "Vishal@123",
                            Position = "Seniour Developer Trainee"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sdrathod4801@gmail.com",
                            Gender = "Male",
                            Location = "Banglore",
                            Name = "Shubham Rathod",
                            Password = "Vishal@123",
                            Position = "Jr. Software Trainee"
                        });
                });

            modelBuilder.Entity("RosteringPractice.Entity.Skills", b =>
                {
                    b.HasOne("RosteringPractice.Entity.Users", "Users")
                        .WithMany("Skill")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RosteringPractice.Entity.Users", b =>
                {
                    b.Navigation("Skill");
                });
#pragma warning restore 612, 618
        }
    }
}
